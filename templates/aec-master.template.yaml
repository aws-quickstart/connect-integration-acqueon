---
AWSTemplateFormatVersion: '2010-09-09'
Description: Acqueon Engagement Cloud (Master Template) for Amazon Connect (qs-1onqkqsbo)
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Amazon VPC Configuration
      Parameters:
      - AvailabilityZones
      - VPCCIDR
      - PublicSubnet1CIDR
      - PublicSubnet2CIDR
      - PrivateSubnet1CIDR
      - PrivateSubnet2CIDR
      - KeyPairName
    - Label:
        default: Amazon EC2 Configuration
      Parameters:
      - AECType
      - EC2InstanceType
      - RDPFrom
    - Label:
        default: Amazon RDS Configuration
      Parameters:
      - RDSDBInstanceName
      - DBMasterUser
      - DBMasterPassword
    - Label:
        default: Amazon Route53 Configuration
      Parameters:
      - DomainHostedZone
      - CFDomainName
      - CFCertificate
      - ELBCertificate
    - Label:
        default: AWS Quick Start configuration
      Parameters:      
        - QSS3BucketName
        - QSS3BucketRegion
        - QSS3KeyPrefix
    ParameterLabels:
      VPCCIDR:
        default: VPC CIDR
      AvailabilityZones:
        default: Availability Zones
      PublicSubnet1CIDR:
        default: Public Subnet 1 CIDR
      PublicSubnet2CIDR:
        default: Public Subnet 2 CIDR
      PrivateSubnet1CIDR:
        default: Private Subnet 1 CIDR
      PrivateSubnet2CIDR:
        default: Private Subnet 2 CIDR
      RDPFrom:
        default: RDP From
      RDSDBInstanceName:
        default: Instance Name
      DBMasterUser:
        default: DB Master User
      DBMasterPassword:
        default: DB Master Password
      EC2InstanceType:
        default: Instance Type
      KeyPairName:
        default: Key Name
      DomainHostedZone:
        default: Hosted Zone
      CFDomainName:
        default: CF DomainName
      CFCertificate:
        default: CF Certificate ARN
      ELBCertificate:
        default: ELB Certificate ARN
      AECType:
        default: AEC Type
      QSS3BucketName:
        default: Quick Start S3 Bucket Name
      QSS3BucketRegion:
        default: Quick Start S3 bucket region
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
Parameters:
  VPCCIDR:
    Description: The IP address range for VPC
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 10.100.0.0/16
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  AvailabilityZones:
    Description: 'List of Availability Zones to use for the subnets in the VPC. Note:
      The logical order is preserved and only 2 AZs are used for this deployment.'
    Type: List<AWS::EC2::AvailabilityZone::Name>
  PublicSubnet1CIDR:
    Description: The IP address range for Public Subnet 1
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 10.100.1.0/24
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  PublicSubnet2CIDR:
    Description: The IP address range for Public Subnet 2
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 10.100.2.0/24
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  PrivateSubnet1CIDR:
    Description: The IP address range for Private Subnet 1
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 10.100.3.0/24
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  PrivateSubnet2CIDR:
    Description: The IP address range for Private Subnet 2
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 10.100.4.0/24
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  RDPFrom:
    Description: The IP address range with access to BastionHost
    Type: String
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  RDSDBInstanceName:
    Description: RDS DB Instance Name
    Type: String
    MinLength: '2'
    MaxLength: '25'
    Default: AEC-dbinstance1
  DBMasterUser:
    Description: RDS Master UserName
    Type: String
    MinLength: '2'
    MaxLength: '25'
  DBMasterPassword:
    Description: RDS Master Password (Minimum 8 characters)
    Type: String
    MinLength: '8'
    MaxLength: '25'
    NoEcho: true
  AECType:
    Type: String
    Default: Voice
    AllowedValues:
    - Voice
    - Omnichannel
    Description: AEC installation type
  EC2InstanceType:
    Type: String
    Default: Option-1a
    AllowedValues:
    - Option-1a
    - Option-1b
    - Option-2a
    - Option-2b
    - Option-3
    Description: Refer 'AEC Capacity and Sizing section' of 'AEC Installation Guide'
      to select appropriate EC2 InstanceType
  KeyPairName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  CFDomainName:
    Description: Alternate domain name for CloudFront
    Type: String
  CFCertificate:
    Description: Certificate ARN for CloudFront. (Need to be created/imported in us-east-1
      region)
    Type: String
  ELBCertificate:
    Description: Certificate ARN for ELB. (Need to be created/imported in stack region
      )
    Type: String
  DomainHostedZone:
    Description: Hosted Zone of the Domain (Required)
    Type: AWS::Route53::HostedZone::Id
# Quick Start Configuration  
  QSS3BucketName:
    AllowedPattern: '^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$'
    ConstraintDescription:
      Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description:
      S3 bucket name for the Quick Start assets. Quick Start bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: 'The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value.'
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: '^[0-9a-zA-Z-/]*$'
    ConstraintDescription:
      Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: connect-integration-acqueon/
    Description:
      S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
  West3Region:
    Fn::Equals:
    - eu-west-3
    - Ref: AWS::Region
Rules:
  west1region:
    Assertions:
    - Assert:
        Fn::Not:
        - Fn::Equals:
          - us-west-1
          - Ref: AWS::Region
      AssertDescription: us-west-1 region is not supported.
  CheckDomainName:
    Assertions:
    - Assert:
        Fn::Not:
        - Fn::Equals:
          - Ref: CFDomainName
          - ''
      AssertDescription: Cloudfront domain name cannot be empty.
  CheckCFCertificate:
    Assertions:
    - Assert:
        Fn::Not:
        - Fn::Equals:
          - Ref: CFCertificate
          - ''
      AssertDescription: Cloudfront certificate cannot be empty.
  CheckELBCertificate:
    Assertions:
    - Assert:
        Fn::Not:
        - Fn::Equals:
          - Ref: ELBCertificate
          - ''
      AssertDescription: ELB certificate cannot be empty.
Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template'
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        AvailabilityZones:
          Fn::Join:
          - ","
          - Ref: AvailabilityZones
        KeyPairName:
          Ref: KeyPairName
        NumberOfAZs: '2'
        PrivateSubnet1ACIDR:
          Ref: PrivateSubnet1CIDR
        PrivateSubnet2ACIDR:
          Ref: PrivateSubnet2CIDR
        PublicSubnet1CIDR:
          Ref: PublicSubnet1CIDR
        PublicSubnet2CIDR:
          Ref: PublicSubnet2CIDR
        VPCCIDR:
          Ref: VPCCIDR
  SecurityStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/aec-security.template.yaml'
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        AECVPC:
          Fn::GetAtt:
          - VPCStack
          - Outputs.VPCID
        VPCCIDR:
          Ref: VPCCIDR
        RDPFrom:
          Ref: RDPFrom
  RDSStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/aec-rds.template.yaml'
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        AECSubnetPrivate1:
          Fn::GetAtt:
          - VPCStack
          - Outputs.PrivateSubnet1AID
        AECSubnetPrivate2:
          Fn::GetAtt:
          - VPCStack
          - Outputs.PrivateSubnet2AID
        AECPrivateGroup:
          Fn::GetAtt:
          - SecurityStack
          - Outputs.AECPrivateGroup
        RDSDBInstanceName:
          Ref: RDSDBInstanceName
        DBMasterUser:
          Ref: DBMasterUser
        DBMasterPassword:
          Ref: DBMasterPassword
        EC2InstanceType:
          Ref: EC2InstanceType
  AMIStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/aec-ami.template.yaml'
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        EC2InstanceType:
          Ref: EC2InstanceType
        KeyPairName:
          Ref: KeyPairName
        CFDomainName:
          Ref: CFDomainName
        CFCertificate:
          Ref: CFCertificate
        ELBCertificate:
          Ref: ELBCertificate
        DomainHostedZone:
          Ref: DomainHostedZone
        AECSubnetPublic1:
          Fn::GetAtt:
          - VPCStack
          - Outputs.PublicSubnet1ID
        AECSubnetPublic2:
          Fn::GetAtt:
          - VPCStack
          - Outputs.PublicSubnet2ID
        AECWeb:
          Fn::GetAtt:
          - SecurityStack
          - Outputs.AECWeb
        AECSubnetPrivate1:
          Fn::GetAtt:
          - VPCStack
          - Outputs.PrivateSubnet1AID
        AECSubnetPrivate2:
          Fn::GetAtt:
          - VPCStack
          - Outputs.PrivateSubnet2AID
        AECPrivateGroup:
          Fn::GetAtt:
          - SecurityStack
          - Outputs.AECPrivateGroup
        AECVPC:
          Fn::GetAtt:
          - VPCStack
          - Outputs.VPCID
        DBMasterUser:
          Ref: DBMasterUser
        DBMasterPassword:
          Ref: DBMasterPassword
        AECRDP:
          Fn::GetAtt:
          - SecurityStack
          - Outputs.AECRDP
        RDSDB:
          Fn::GetAtt:
          - RDSStack
          - Outputs.RDSDB
        AECType:
          Ref: AECType
Outputs:
  AECRDSEndpoint:
    Value:
      Fn::GetAtt:
      - RDSStack
      - Outputs.RDSDB
    Description: AEC RDS Database Endpoint Address
  AECHostURL:
    Value:
      Fn::Join:
      - ''
      - - https://
        - Ref: CFDomainName
        - "/LCMConsole"
    Description: AEC Console Host URL
  AECTenantURL:
    Value:
      Fn::Join:
      - ''
      - - https://
        - Ref: CFDomainName
        - "/instance1LCMConsole"
    Description: AEC Console Tenant URL
  AECAgentClientURL:
    Value:
      Fn::Join:
      - ''
      - - https://
        - Ref: CFDomainName
        - "/instance1LCMAgentClient/CCAD.htm"
    Description: AEC Agent Client URL
  AECUserRegConsole:
    Value:
      Fn::Join:
      - ''
      - - https://
        - Ref: CFDomainName
        - "/AECInstanceConsole"
    Description: AEC User Registration Console URL
