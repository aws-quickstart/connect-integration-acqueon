{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Acqueon Engagement Cloud (Worker Template) for Amazon Connect (qs-)",
    "Metadata": {
      "AWS::CloudFormation::Interface": {
          "ParameterGroups": [
			  {
				  "Label": {
					  "default": "Amazon VPC Configuration"
				  },
				  "Parameters": [
					  "AvailabilityZones",
					  "VPCCIDR",
					  "PrivateSubnet1CIDR",
					  "PrivateSubnet2CIDR",
					  "PublicSubnet1CIDR",
					  "PublicSubnet2CIDR",
					  "KeyPairName"
				  ]
			  },
				{
					"Label": {
						"default": "SecurityGroup Configuration"
					},
					"Parameters": [
						"RDPFrom"
					]
				}
          ],
          "ParameterLabels": {
              "AvailabilityZones": {
                  "default": "Availability Zones"
              },
              "KeyPairName": {
                  "default": "Key Pair Name"
              },
              "PrivateSubnet1CIDR": {
                  "default": "Private Subnet 1 CIDR"
              },
              "PrivateSubnet2CIDR": {
                  "default": "Private Subnet 2 CIDR"
              },
              "PublicSubnet1CIDR": {
                  "default": "Public Subnet 1 CIDR"
              },
              "PublicSubnet2CIDR": {
                  "default": "Public Subnet 2 CIDR"
              },
              "VPCCIDR": {
                  "default": "VPC CIDR"
              },
              "RDPFrom": {
                  "default": "RDP From"
              }
          }
      }
  },
    "Parameters": {
        "VPCCIDR": {
            "Description": "The IP address range for VPC",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "10.50.0.0/16",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "AvailabilityZones": {
            "Description": "List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved and only 2 AZs are used for this deployment.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "PublicSubnet1CIDR": {
            "Description": "The IP address range for Public Subnet 1",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "10.50.1.0/24",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "PublicSubnet2CIDR": {
            "Description": "The IP address range for Public Subnet 2",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "10.50.2.0/24",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "PrivateSubnet1CIDR": {
            "Description": "The IP address range for Private Subnet 1",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "10.50.3.0/24",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "PrivateSubnet2CIDR": {
            "Description": "The IP address range for Private Subnet 2",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "10.50.4.0/24",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "RDPFrom": {
            "Description": "The IP address range with access to BastionHost",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        }
    },
    "Resources": {
        "AECVPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "VPCCIDR"
                },
                "InstanceTenancy": "default",
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "false",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    "AEC",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "AECSubnetPublic1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Ref": "PublicSubnet1CIDR"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Ref": "AvailabilityZones"
                        }
                    ]
                },
                "VpcId": {
                    "Ref": "AECVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    "AEC-Public1",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "AECSubnetPublic2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Ref": "PublicSubnet2CIDR"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        1,
                        {
                            "Ref": "AvailabilityZones"
                        }
                    ]
                },
                "VpcId": {
                    "Ref": "AECVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    "AEC-Public2",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "AECSubnetPrivate1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Ref": "PrivateSubnet1CIDR"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Ref": "AvailabilityZones"
                        }
                    ]
                },
                "VpcId": {
                    "Ref": "AECVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    "AEC-Private1",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "AECSubnetPrivate2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Ref": "PrivateSubnet2CIDR"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        1,
                        {
                            "Ref": "AvailabilityZones"
                        }
                    ]
                },
                "VpcId": {
                    "Ref": "AECVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    "AEC-Private2",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "AECIGW": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    "AEC",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "AECACL": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "AECVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    "AEC-",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "AECRoutePublic1": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "AECVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    "AEC-Public1",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "AECRoutePublic2": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "AECVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    "AEC-Public2",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "AECRoutePrivate1": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "AECVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    "AEC-Private1",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "AECRoutePrivate2": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "AECVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    "AEC-Private2",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "AECPrivateGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "For EC2 in private subnet",
                "VpcId": {
                    "Ref": "AECVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    "AEC-EC2",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "AECWeb": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "AEC-1-Web Loadbalancer",
                "VpcId": {
                    "Ref": "AECVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    "AEC-Web",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "AECRDP": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "For Bastion Host",
                "VpcId": {
                    "Ref": "AECVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    "AEC-RDP",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "EIPNAT1": {
            "Type": "AWS::EC2::EIP",
            "DependsOn": "VPCGatewayAttach",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "EIPNAT2": {
            "Type": "AWS::EC2::EIP",
            "DependsOn": "VPCGatewayAttach",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "NATPublic1": {
            "DependsOn": "VPCGatewayAttach",
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "EIPNAT1",
                        "AllocationId"
                    ]
                },
                "SubnetId": {
                    "Ref": "AECSubnetPublic1"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "BAEC-1"
                    }
                ]
            }
        },
        "NATPublic2": {
            "DependsOn": "VPCGatewayAttach",
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "EIPNAT2",
                        "AllocationId"
                    ]
                },
                "SubnetId": {
                    "Ref": "AECSubnetPublic2"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "BAEC-2"
                    }
                ]
            }
        },
        "VPCGatewayAttach": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "AECVPC"
                },
                "InternetGatewayId": {
                    "Ref": "AECIGW"
                }
            }
        },
        "acl1": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Egress": "true",
                "Protocol": "-1",
                "RuleAction": "allow",
                "RuleNumber": "100",
                "NetworkAclId": {
                    "Ref": "AECACL"
                }
            }
        },
        "acl2": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Protocol": "-1",
                "RuleAction": "allow",
                "RuleNumber": "100",
                "NetworkAclId": {
                    "Ref": "AECACL"
                }
            }
        },
        "subnetacl1": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "AECACL"
                },
                "SubnetId": {
                    "Ref": "AECSubnetPrivate2"
                }
            }
        },
        "subnetacl2": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "AECACL"
                },
                "SubnetId": {
                    "Ref": "AECSubnetPublic1"
                }
            }
        },
        "subnetacl3": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "AECACL"
                },
                "SubnetId": {
                    "Ref": "AECSubnetPrivate1"
                }
            }
        },
        "subnetacl4": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "AECACL"
                },
                "SubnetId": {
                    "Ref": "AECSubnetPublic2"
                }
            }
        },
        "subnetroute1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "AECRoutePublic2"
                },
                "SubnetId": {
                    "Ref": "AECSubnetPublic2"
                }
            }
        },
        "subnetroute3": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "AECRoutePublic1"
                },
                "SubnetId": {
                    "Ref": "AECSubnetPublic1"
                }
            }
        },
        "subnetroute4": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "AECRoutePrivate2"
                },
                "SubnetId": {
                    "Ref": "AECSubnetPrivate2"
                }
            }
        },
        "subnetroute5": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "AECRoutePrivate1"
                },
                "SubnetId": {
                    "Ref": "AECSubnetPrivate1"
                }
            }
        },
        "route1": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "RouteTableId": {
                    "Ref": "AECRoutePublic2"
                },
                "GatewayId": {
                    "Ref": "AECIGW"
                }
            },
            "DependsOn": "VPCGatewayAttach"
        },
        "route2": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "RouteTableId": {
                    "Ref": "AECRoutePublic1"
                },
                "GatewayId": {
                    "Ref": "AECIGW"
                }
            },
            "DependsOn": "VPCGatewayAttach"
        },
        "route3": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "RouteTableId": {
                    "Ref": "AECRoutePrivate2"
                },
                "NatGatewayId": {
                    "Ref": "NATPublic2"
                }
            }
        },
        "route4": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "RouteTableId": {
                    "Ref": "AECRoutePrivate1"
                },
                "NatGatewayId": {
                    "Ref": "NATPublic1"
                }
            }
        },
        "ingress1": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "AECPrivateGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "1433",
                "ToPort": "1433",
                "CidrIp": {
                    "Ref": "VPCCIDR"
                }
            }
        },
        "ingress3": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "AECPrivateGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "80",
                "ToPort": "80",
                "CidrIp": {
                    "Ref": "VPCCIDR"
                }
            }
        },
        "ingress4": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "AECPrivateGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "85",
                "ToPort": "85",
                "CidrIp": {
                    "Ref": "VPCCIDR"
                }
            }
        },
        "ingress7": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "AECPrivateGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "35000",
                "ToPort": "35050",
                "CidrIp": {
                    "Ref": "VPCCIDR"
                }
            }
        },
        "ingress8": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "AECPrivateGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "5555",
                "ToPort": "5555",
                "CidrIp": {
                    "Ref": "VPCCIDR"
                }
            }
        },
        "ingress9": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "AECPrivateGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "3389",
                "ToPort": "3389",
                "CidrIp": {
                    "Ref": "VPCCIDR"
                }
            }
        },
        "ingress10": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "AECPrivateGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "445",
                "ToPort": "445",
                "CidrIp": {
                    "Ref": "VPCCIDR"
                }
            }
        },
        "ingress11": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "AECPrivateGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "443",
                "ToPort": "443",
                "CidrIp": {
                    "Ref": "VPCCIDR"
                }
            }
        },
        "ingress12": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "AECPrivateGroup"
                },
                "IpProtocol": "icmp",
                "FromPort": "-1",
                "ToPort": "-1",
                "CidrIp": {
                    "Ref": "VPCCIDR"
                }
            }
        },
        "ingress13": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "AECPrivateGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "36000",
                "ToPort": "36050",
                "CidrIp": {
                    "Ref": "VPCCIDR"
                }
            }
        },
        "ingress14": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "AECPrivateGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "2049",
                "ToPort": "2049",
                "CidrIp": {
                    "Ref": "VPCCIDR"
                }
            }
        },
        "ingress15": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "AECWeb"
                },
                "IpProtocol": "tcp",
                "FromPort": "80",
                "ToPort": "80",
                "CidrIp": "0.0.0.0/0"
            }
        },
        "ingress17": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "AECWeb"
                },
                "IpProtocol": "tcp",
                "FromPort": "443",
                "ToPort": "443",
                "CidrIp": "0.0.0.0/0"
            }
        },
        "ingress16": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "AECRDP"
                },
                "IpProtocol": "tcp",
                "FromPort": "3389",
                "ToPort": "3389",
                "CidrIp": {
                    "Ref": "RDPFrom"
                }
            }
        },
        "egress1": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "GroupId": {
                    "Ref": "AECPrivateGroup"
                },
                "IpProtocol": "-1",
                "CidrIp": "0.0.0.0/0"
            }
        },
        "egress2": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "GroupId": {
                    "Ref": "AECWeb"
                },
                "IpProtocol": "-1",
                "CidrIp": "0.0.0.0/0"
            }
        },
        "egress3": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "GroupId": {
                    "Ref": "AECRDP"
                },
                "IpProtocol": "-1",
                "CidrIp": "0.0.0.0/0"
            }
        }
    },
    "Outputs": {
        "AECSubnetPrivate1": {
            "Value": {
                "Ref": "AECSubnetPrivate1"
            }
        },
        "AECSubnetPrivate2": {
            "Value": {
                "Ref": "AECSubnetPrivate2"
            }
        },
        "AECPrivateGroup": {
            "Value": {
                "Ref": "AECPrivateGroup"
            }
        },
        "AECSubnetPublic1": {
            "Value": {
                "Ref": "AECSubnetPublic1"
            }
        },
        "AECSubnetPublic2": {
            "Value": {
                "Ref": "AECSubnetPublic2"
            }
        },
        "AECWeb": {
            "Value": {
                "Ref": "AECWeb"
            }
        },
        "AECVPC": {
            "Value": {
                "Ref": "AECVPC"
            }
        },
        "AECRDP": {
            "Value": {
                "Ref": "AECRDP"
            }
        }
    }
}
